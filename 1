void main() {
  var list = LinkedList<int>();
  list.push(3);
  list.push(2);
  list.push(1);
  print(list);

  list = LinkedList<int>(); // new empty list
  list.append(1);
  list.append(2);
  list.append(3);
  print(list);
}

class Node<T> {
  Node(this.value);
  T? value;
  Node? next;

  @override
  String toString() {
    if (next == null) return '$value';
    return '$value -> ${next.toString()}';
  }
}

class LinkedList<E> {
  Node<E>? head;
  Node<E>? tail;

  bool get isEmpty => head == null;

 
  void push(E value) {
    final node = Node(value);
    if (isEmpty) {
      head = node;
      tail = node;
      return;
    }
    node.next = head;
    head = node;
  }

 
  void append(E value) {
    if (isEmpty) {
      push(value);
      return;
    }
    final node = Node(value);
    tail!.next = node;
    tail = node;
  }

  @override
  String toString() {
    if (isEmpty) return 'Empty list';
    return head.toString();
  }
